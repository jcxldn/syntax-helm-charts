replicaCount: 1
updateStrategy: Recreate

# MariaDB
mariadb:
  global:
    defaultStorageClass: "longhorn"
  auth:
    rootPassword: adminsecret
    database: "snipeit"
    username: "snipeit"
    password: "snipeitdbsecret"
    port: 3306

# snipeit config
snipeit:
  config:
    appKey:
      name: laravel-app-key
    env: production
    debug: false
    url: http://snipeit.example.com
    timezone: Europe/Berlin
    locale: en
    mail:
      mailer: smtp
      host: email-smtp.us-west-2.amazonaws.com
      port: 587
      username: YOURUSERNAME
      password: YOURPASSWORD
      from:
        addr: you@example.com
        name: Snipe-IT
      reply:
        addr: you@example.com
        name: Snipe-IT
      autoembed:
        enabled: true
        method: base64
      tlsverifypeer: true
  persistence:
    enabled: true
    size: 2Gi
    storageClass: longhorn
    accessMode: ReadWriteOnce
    existingClaim: ""
  image:
    repository: docker.io/snipe/snipe-it
    pullPolicy: IfNotPresent
    tag: "v8.1.0-alpine"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 101
securityContext: {}
  # runAsNonRoot: true
  # allowPrivilegeEscalation: false
  # runAsUser: 100
  # runAsGroup: 101
  # seccompProfile:
  #   type: RuntimeDefault

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: snipeit.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    # cpu: 1000m
    memory: 1024Mi
  requests:
    cpu: 300m
    memory: 496Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: http
  periodSeconds: 15
  timeoutSeconds: 3
readinessProbe:
  httpGet:
    path: /health
    port: http
  periodSeconds: 15
  timeoutSeconds: 3

# Additional volumes on the output Deployment definition.
volumes:
  - name: data
    persistentVolumeClaim:
      claimName: "snipeitdata"
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: data
    mountPath: "/var/lib/snipeit"
    subPath: "www"
  - name: data
    mountPath: "/var/www/html/storage/framework/sessions"
    subPath: "sessions"
  - name: data
    mountPath: "/var/www/html/storage/app/backups"
    subPath: "backups"

nodeSelector: {}

tolerations: []

affinity: {}